import streamlit as st
import requests
import pandas as pd 
import time
import plotly.express as px
import requests


def formata_numero(valor, prefixo = ''):
    for unidade in ['', 'mil']:
        if valor <1000:
            return f'{prefixo} {valor:.2f} {unidade}'
        valor /= 1000
    return f'{prefixo} {valor:.2f} milh√µes'

# Incialiaza√ßao do ambiente: venv\Scripts\activate , streamlit run main.py

st.set_page_config(layout='wide')

st.markdown("<p style='text-align: center; color:purple; font-size:54px'> Exporta√ß√£o de Vinhedos üç∑ </p>",  unsafe_allow_html=True)

url_exp = 'https://raw.githubusercontent.com/FIAP-Tech-Challenge/exportacao-vinho/main/app/data/exportacao.csv'
response_exp = requests.get(url_exp)     
if response_exp.status_code == 200:
    # Assuming it's a text file
    content = response_exp.text

    # Now, you can work with the content as needed
    with open('file_exp.csv', 'w', encoding="utf-8") as local_file_exp:
        local_file_exp.write(content)
else:
    print(f"Failed to download file. Status code: {response_exp.status_code}")   

with open(local_file_exp.name, encoding="utf-8") as file:
    df = pd.read_csv(file, sep=';', skiprows = 1)

@st.cache_data
def converte_csv(df):
    return df.to_csv(index = False).encode('utf-8')

def mensagem_sucesso():
    sucesso = st.success('Arquivo baixado com sucesso!', icon = "‚úÖ")
    time.sleep(5)
    sucesso.empty()

anos = list(range(1970,2007)) # Criando uma lista entre 1970 e 2006
anos = list(map(str,anos)) # Convertendo todos os valores da lista para string
anos_aux = [ano + '.1' for ano in anos] # copiando a lista por√©m adicionando o p√≥s fixo '.1'
anos_final = anos + anos_aux # concatenando as duas listas

df = df.drop(anos_final, axis=1) # removendo colunas n√£o necess√°rias

columns_to_melt = list(df.columns) # criando a lista de colunas
columns_to_melt.pop(0) # deletando a coluna Id
columns_to_melt.pop(0) # deletando a coluna pa√≠s

dados_vinho = df.melt(
    id_vars = ['Id','Pa√≠s'],
    value_vars = columns_to_melt,
    var_name = 'ano',
    value_name = 'valor'
) # Derretando o Dataframe deixando apenas as colunas Id e pa√≠s fixas

dados_vinho['Medida'] = dados_vinho['ano'].apply(lambda valor: 'Valor' if valor.endswith('.1') else 'Quantidade') # Aplicando regra para nomea√ß√£o de medida
dados_vinho['ano'] = dados_vinho['ano'].str.replace('.1','') # Removendo .1 do ano
dados_vinho['ano'] = dados_vinho['ano'].replace({'21':'2011', '22':'2012', '23':'2013', '24':'2014','25':'2015','26':'2016','27':'2017','28':'2018','29':'2019'})
dados_vinho.iloc[768:1024] = dados_vinho.iloc[768:1024].replace({'20':'2010'})
dados_vinho.iloc[3584:3840] = dados_vinho.iloc[3584:3840].replace({'20':'2021'})
dados_vinho['Pa√≠s de origem'] = 'Brasil'
dados_vinho.rename({'Pa√≠s':'Pa√≠s de destino'}, axis=1, inplace = True)
df = dados_vinho
df_vinho_valor = dados_vinho[dados_vinho['Medida'] == 'Valor']
df_vinho_quantidade = dados_vinho[dados_vinho['Medida'] == 'Quantidade']
df_agrupado_ano = df_vinho_valor.groupby('ano')['valor'].sum().reset_index()
df_vinho_valor = df_vinho_valor.sort_values(by="valor", ascending=False)
df_agrupado_quantidade = df_vinho_quantidade.groupby('ano')['valor'].sum().reset_index()
df_maiores_gastos = df_vinho_valor.sort_values(by="valor", ascending=False)
df_maiores_gastos = df_maiores_gastos.drop(['Id', 'ano', 'Medida', 'Pa√≠s de origem'], axis=1)
df_maiores_gastos = df_maiores_gastos.loc[1769:3797]
df_maiores_gastos = df_maiores_gastos.groupby("Pa√≠s de destino").sum()
df_maiores_gastos = df_maiores_gastos.sort_values(by="valor", ascending=False)
df_maiores_gastos = df_maiores_gastos.reset_index()
df_maiores_quantidades = df_vinho_quantidade.sort_values(by="valor", ascending=False)
df_maiores_quantidades = df_maiores_quantidades.drop(['Id', 'ano', 'Medida','Pa√≠s de origem'], axis=1)
df_maiores_quantidades = df_maiores_quantidades.loc[617:3609]
df_maiores_quantidades = df_maiores_quantidades.groupby("Pa√≠s de destino").sum()
df_maiores_quantidades = df_maiores_quantidades.sort_values(by="valor", ascending=False)
df_maiores_quantidades = df_maiores_quantidades.reset_index()
df_quantidade = df_agrupado_quantidade[['ano', 'valor']].rename(columns={'valor': 'quantidade'})
df_ano = df_agrupado_ano[['ano', 'valor']].rename(columns={'valor': 'receita'})
df_comparacao_medidas = pd.merge(df_quantidade, df_ano, on='ano')
df_paises_quantidades = df_maiores_quantidades[['Pa√≠s de destino', 'valor']].rename(columns={'valor': 'Quantidade'})
df_paises_valor = df_maiores_gastos[['Pa√≠s de destino', 'valor']].rename(columns={'valor': 'Receita'})
df_paises_expressivos = pd.merge(df_paises_quantidades, df_paises_valor, on='Pa√≠s de destino')
df_paises_expressivos['Pa√≠s de origem'] = 'Brasil'
paises_selecionados = ['R√∫ssia', 'Paraguai',	'Estados Unidos',	'China',	'Espanha',	'Haiti',	'Jap√£o',	'Pa√≠ses Baixos',	'Reino Unido','Alemanha, Rep√∫blica Democr√°tica']
df_filtrado = df_vinho_quantidade[df_vinho_quantidade['Pa√≠s de destino'].isin(paises_selecionados)]
df_filtrado = df_filtrado.sort_values(by="valor", ascending=False)
paises_sem_russia = ['Paraguai',	'Estados Unidos',	'China',	'Espanha',	'Haiti',	'Jap√£o',	'Pa√≠ses Baixos',	'Reino Unido','Alemanha, Rep√∫blica Democr√°tica']
df_filtrado_sem_russia  = df_vinho_quantidade[df_vinho_quantidade['Pa√≠s de destino'].isin(paises_sem_russia)]
df_filtrado_sem_russia = df_filtrado_sem_russia.sort_values(by="valor", ascending=False)

st.markdown("<p style='text-align: center; color:gray; font-size:24px'>Tabela de exporta√ß√£o e valores de quantidade em litros de vinho e receita em d√≥lares do per√≠odo de 2007 √† 2022 ", unsafe_allow_html=True)
st.dataframe(df_paises_expressivos)

##Gr√°ficos 

fig_valor_anual = px.line(df_agrupado_ano,
                             x ='ano',
                             y ='valor',
                             markers = True,
                             range_y = (0,df_agrupado_ano.max()),
                             title ='Valor anual da exporta√ß√£o de vinhos de mesa')

fig_valor_anual.update_layout(yaxis_title = 'Receita')

fig_quantidade_anual = px.line(df_agrupado_quantidade,
                             x ='ano',
                             y ='valor',
                             markers = True,
                             range_y = (0,df_agrupado_quantidade.max()),
                             title ='Litros anuais de vinho exportados')

fig_quantidade_anual.update_layout(yaxis_title = 'Litros')


fig_valor_paises = px.bar(df_maiores_gastos.head(10),
                             x = 'Pa√≠s de destino',
                             y = 'valor',
                             text_auto = True,
                             title = 'Paises com maior receita exportada')

fig_valor_paises.update_layout(yaxis_title = 'Receita')

fig_quantidade_paises = px.bar(df_maiores_quantidades.head(10), 
                             x = 'Pa√≠s de destino',
                             y = 'valor',
                             text_auto = True,
                             title = 'Paises com maior quantidade em litros de vinho exportado')

fig_quantidade_paises.update_layout(yaxis_title = 'Litros')

fig_comparacao_medidas = px.line(df_comparacao_medidas, x='ano', y=['receita', 'quantidade'],
              markers=True, labels={'value': 'Valor'}, 
              title='A rela√ß√£o entre as medidas de valores recebidos e quantidades exportadas nos √∫ltimos 15 anos',
              color_discrete_map={'receita': 'orange', 'quantidade': 'blue'})

fig_comparacao_medidas.update_layout(yaxis_title = 'Medidas')

fig_outlier_com_russia = px.bar(df_filtrado,
                             x ='ano',
                             y ='valor',
                             barmode='group',
                             range_y = (0,df_filtrado.max()),
                             color = 'Pa√≠s de destino',
                             title ='Evolutivo anual de exporta√ß√£o de vinhos em litros com R√∫ssia')

fig_outlier_com_russia .update_layout(yaxis_title = 'Litros')

fig_outlier_sem_russia = px.bar(df_filtrado_sem_russia,
                             x ='ano',
                             y ='valor',
                             barmode='group',
                             range_y = (0,df_filtrado_sem_russia.max()),
                             color = 'Pa√≠s de destino',
                             title ='Evolutivo anual de exporta√ß√£o de vinhos em litros sem R√∫ssia')

fig_outlier_sem_russia.update_layout(yaxis_title = 'Litros')

##Visualiza√ß√£o no Streamlit

aba1, aba2, aba3, aba4, aba5, aba6, aba7 = st.tabs(['Receita','Quantidade em litros de vinho exportado anualmente','Receita em d√≥lares obtida pelos principais pa√≠ses', 'Quantidade em litros exportada pelos principais pa√≠ses', 'Russia, nosso outlier', 'Visualiza√ß√£o sem outlier', 'Compara√ß√£o das medidas'])

with aba1:

    coluna1,coluna2 = st.columns(2)
    with coluna1:
        st.metric ('Receita', formata_numero(df_agrupado_ano['valor'].sum(), 'US$'))
        st.plotly_chart(fig_valor_anual, use_container_width = True)
    with coluna2:
        st.write("<p style='text-align: justify; color:gray; font-size:18px'> üí° An√°lise: √â notado que as receitas dos anos de 2009 e 2013 foram os anos mais expressivos at√© 2020. Ano de 2013 foi o ano com o maior valor de receita em todo o per√≠odo. Deve-se levar em considera√ß√£o que no ano de 2010 obteve-se a maior queda em todo o per√≠odo assim como o ano de 2015. a partir do ano de 2016 a exporta√ß√£o de vinhos apresentou melhoras ano ap√≥s ano, com o ano de 2022 tomando o lugar de 2009 como o segundo ano mais lucrativo do per√≠odo.",  unsafe_allow_html=True)


with aba2:
    coluna1,coluna2 = st.columns(2)
    with coluna1:
        st.metric ('Litros exportados', formata_numero(df_vinho_quantidade['valor'].sum()))
        st.plotly_chart(fig_quantidade_anual, use_container_width = True)
    with coluna2:
        st.write("<p style='text-align: justify; color:gray; font-size:18px'> üí° An√°lise: A exporta√ß√£o dos anos de 2009 e 2013 foram os mais expressivos em todo o per√≠odo. No entanto o ano de 2009 foi o ano em que se teve a maior quantidade de vinhos de mesa exportado e ano de 2013 menor comparado ao ano de 2009.",  unsafe_allow_html=True)
    
with aba3:
    coluna1,coluna2 = st.columns(2)
    with coluna1:
            st.plotly_chart(fig_valor_paises, use_container_width = True)
    with coluna2:
            st.write("<p style='text-align: justify; color:gray; font-size:18px'> 'üí° An√°lise: √â percept√≠vel que os pa√≠ses que tiveram maior contribui√ß√£o na receita de exporta√ß√£o foram Paraguai e R√∫ssia, os demais pa√≠ses tiveram uma participac√£o menor comparado aos mesmos no per√≠odo.",  unsafe_allow_html=True)
           
with aba4:
    coluna1,coluna2 = st.columns(2)
    with coluna1:
            st.plotly_chart(fig_quantidade_paises, use_container_width = True)
    with coluna2:
            st.write("<p style='text-align: justify; color:gray; font-size:18px'> 'üí° An√°lise: A R√∫ssia foi o pa√≠s que exportou a maior quantidade em litros de vinho no per√≠odo de 2007 √† 2022 mas mesmo assim n√£o foi o pa√≠s com a maior receita, tal raz√£o para isso pode ser melhor detalhado nas pr√≥ximas abas",  unsafe_allow_html=True)       

with aba5:
    coluna1,coluna2 = st.columns(2)
    with coluna1:
            st.plotly_chart(fig_outlier_com_russia )    
    with  coluna2:
            st.write("<p style='text-align: justify; color:gray; font-size:18px'> 'üí° An√°lise: A R√∫ssia embora tenha contribu√≠do significativamente no per√≠do dos √∫ltimos 15 anos com a exporta√ß√£o do vinho no Brasil, pode ser considerada como um outlier(dados que se diferenciam drasticamente de todos os outros) pois ao analisar seus dados √© poss√≠vel verificar que os valores mais expressivos concentram-se apenas nos anos de 2008,2009,2012 e 2013. A partir do ano de 2014 at√© o momento seus valores foram reduzidos drasticamente. Vale ressaltar que a R√∫ssia det√©m 43,05 por cento das exporta√ß√µes de vinho de todo o per√≠odo.",  unsafe_allow_html=True)   

with aba6:
    coluna1,coluna2 = st.columns(2)
    with coluna1:
            st.plotly_chart(fig_outlier_sem_russia )
    with coluna2:
            st.write("<p style='text-align: justify; color:gray; font-size:18px'> 'üí° An√°lise: O Paraguai destaca-se pelos valores mais significativos ao analisarmos a evolu√ß√£o anual. A partir de 2017, registra um crescimento exponencial, caracterizado por varia√ß√µes positivas em todos os anos, com exce√ß√£o de 2019. Neste ano, o pa√≠s enfrentou uma crise pol√≠tica que resultou em uma redu√ß√£o nos valores de exporta√ß√£o. Tal fato deve ser creditado pelo fato do pa√≠s pertencer ao bloco econ√¥mico MERCOSUL (Mercado Comum do Sul) composto por Argentina, Brasil, Paraguai e Uruguai que t√™m por objetivo promover o com√©rcio, com pol√≠ticas e acordos que facilitem as trocas entre os participantes.",  unsafe_allow_html=True)

with aba7:
      coluna1,coluna2 = st.columns(2)
      with coluna1:
            st.plotly_chart(fig_comparacao_medidas )
      with coluna2:
            st.write("<p style='text-align: justify; color:gray; font-size:18px'> 'üí° An√°lise: A partir de 2010, observamos que a tend√™ncia da linha de valor supera consistentemente a linha de quantidade, e essa din√¢mica persiste at√© a data mais recente. Essa situa√ß√£o pode ser atribu√≠da ao aumento cont√≠nuo do valor do d√≥lar a partir de 2010, exercendo um impacto direto em todas as transa√ß√µes comerciais, bem como o aumento das taxas de exporta√ß√£o contribuindo nesse cen√°rio.",  unsafe_allow_html=True)

#BOTAO DOWNLOAD
                      
st.markdown('Escreva um nome para o arquivo')
coluna1, coluna2 = st.columns(2)
with coluna1:
    nome_arquivo = st.text_input('', label_visibility = 'collapsed', value = 'dados')
    nome_arquivo += '.csv'
with coluna2:
    st.download_button('Fazer o download da tabela em csv', data = converte_csv(df), file_name = nome_arquivo, mime = 'text/csv', on_click = mensagem_sucesso)